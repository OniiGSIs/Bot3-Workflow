name: Hakalle
on:
  push:
    branches: [stag]
  workflow_dispatch:

env:
  TZ: America/Recife

jobs:
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 525600

    steps:
      - name: Checkouts
        uses: actions/checkout@master
      - uses: rokibhasansagar/slimhub_actions@main

      - name: Reclaiming disk space on / by disabling swap partition
        run: |
          sudo swapoff -av
          sudo rm -f /swapfile

      - name: Create swap (Avoid mk2fs issues)
        run: |
          sudo dd if=/dev/zero of=swap bs=4k count=1048576
          sudo mkswap swap
          sudo swapon swap

      - name: Setup git Environment
        run: |
          git config --global user.name "priiiiyo"
          git config --global user.email ${{ secrets.EMAIL }}
          git config --global pull.rebase false
          git config --global credential.helper store
          echo "https://priiiiyo:${{ secrets.DEV_TOKEN }}@github.com" > ~/.git-credentials

      - name: Clone workflow
        continue-on-error: true
        run: |
          mkdir tmp && cd tmp
          git clone https://github.com/PriiiiyoGSIs/Bot3-Workflow Haka

      - name: Install tools/packages
        continue-on-error: true
        timeout-minutes: 5
        run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python libssl-dev flex bison aria2 unace unrar zip unzip p7zip-full p7zip-rar sharutils rar uudeview mpack arj cabextract file-roller liblzma-dev brotli liblz4-tool axel gawk aria2 rename build-essential simg2img aria2 python3-pip tree
          
      - name: Try to drop prebuilt OpenJDKs
        run: |
          rm -rf /usr/lib/jvm/adoptopenjdk-8-hotspot-amd64
          sudo apt-get purge --purge openjdk* -y

      - name: Try to download GraalVM's JDK 16
        run: |
          cd /usr; sudo mkdir -p oracle/java/ && cd oracle/java/
          sudo wget 'https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.2.0/graalvm-ce-java16-linux-amd64-21.2.0.tar.gz' -O graalvm-jdk16.tar.gz >> /dev/null 2>&1
          sudo tar -xzvf graalvm-jdk16.tar.gz >> /dev/null 2>&1 && sudo rm -f graalvm-jdk16.tar.gz
          export JAVA_HOME=/usr/oracle/java/graalvm-ce-java16-21.2.0
          export PATH=$PATH:$JAVA_HOME/bin
      
      - name: Set GraalVM (binaries) as default
        run: |
          sudo update-alternatives --install "/usr/bin/javac" "javac" "/usr/oracle/java/graalvm-ce-java16-21.2.0/bin/javac" 1
          sudo update-alternatives --install "/usr/bin/java" "java" "/usr/oracle/java/graalvm-ce-java16-21.2.0/bin/java" 1
          sudo update-alternatives --install "/usr/bin/gu" "gu" "/usr/oracle/java/graalvm-ce-java16-21.2.0/bin/gu" 1
      
      - name: Clone, Compile & Setup Hakalle
        env:
          JAVA_HOME: /usr/oracle/java/graalvm-ce-java16-21.2.0
        run: |
          git clone https://github.com/PriiiiyoGSIs/Bot3
          cd Hakalle && ./gradlew shadowJar; cd app/build/libs
          mkdir configs && cd configs
          touch configs.prop
          touch allowed2port.json
          touch hakalle.yaml
          echo "token: ${{ secrets.BOT_TOKEN }}" >> hakalle.yaml
          echo "username: PriiiiyoGSIs_Bot" >> hakalle.yaml
          echo "creatorId: 1032152179" >> hakalle.yaml
          echo "privateChatId: -1001212338973" >> hakalle.yaml
          echo "publicChatId: -1001212338973" >> hakalle.yaml
          echo "channelId: -1001212338973" >> hakalle.yaml
          echo "bot-sf-pass=${{ secrets.PASS_SF }}" >> sf-creds.prop
          echo "bot-sf-proj=priyogsis" >> sf-creds.prop
          echo "bot-sf-user=smpriyo" >> sf-creds.prop
          echo "bot-announcement-id=-1001405823755" >> sf-creds.prop
          echo "bot-sf-host=frs.sourceforge.net" >> sf-creds.prop
          echo "bot-send-announcement=true" >> sf-creds.prop
          #echo '["1032152179","783675636","530626215"]' >> allowed2port.json

      - name: Setup our tool
        continue-on-error: true
        timeout-minutes: 6
        run: |
          sudo apt install openjdk-8-jdk -y >> /dev/null 2>&1
          cd Hakalle/app/build/libs
          git clone --recurse-submodules https://github.com/PriiiiyoGSIs/ErfanGSIs-PriiiiyoGSIs ErfanGSIs -b velan/stable
          cd ErfanGSIs/tools/ROM_resigner && sed -i "s|signjarcmd = \"java -jar|signjarcmd = \"/usr/lib/jvm/java-1.8.0-openjdk-amd64/bin/java -jar|g" resign.py
          pip3 install wheel setuptools
          pip3 install backports.lzma docopt zstandard bsdiff4 protobuf pycrypto
          sudo pip3 install --upgrade protobuf
          echo 'e0c9035898dd52fc65c41454cec9c4d2' >> haka.gsf

      - name: Run the Hakalle
        continue-on-error: true
        timeout-minutes: 315
        run: cd Hakalle/app/build/libs && sudo /usr/oracle/java/graalvm-ce-java16-21.2.0/bin/java -jar app-0.1-all.jar

      - name: Re-run Hakalle workflow
        continue-on-error: true
        timeout-minutes: 5
        run: |
          cd tmp/Haka
          git commit --allow-empty -m "[LOOP] Re-run Hakalle workflow"
          git push -f
